package org.bzzzzShop.service;

import org.bzzzzShop.models.Goods;
import org.bzzzzShop.models.beehive.Beehive;
import org.bzzzzShop.models.beehive.components.*;
import org.bzzzzShop.models.uniform.GlovesOfTheBeekeeper;
import org.bzzzzShop.models.uniform.MaskOfTheBeekeeper;
import org.bzzzzShop.models.uniform.OverallOfTheBeekeeper;

import java.math.BigDecimal;
import java.util.*;
import java.util.stream.Collectors;
import java.util.stream.Stream;

/* Класс синглтон
 * для работы с товарами */
public class ServiceWorker {

    private Set<Goods> products;
    private static ServiceWorker instance;

    public static ServiceWorker getInstance() {
        if (instance == null)
            instance = new ServiceWorker();
        return instance;
    }

    private ServiceWorker() {
        products = new HashSet<>();
    /*
        Здесь идёт довольно громоздкий код, это создание компонент улья и других товаров.
        Выглядит страшно, но так надо :) (надеюсь)
     */

        //--------------------------------------------------------------------------------------------------------------
        //      Улей1
        //--------------------------------------------------------------------------------------------------------------
        ComponentsOfTheBeehive roof = new RoofOfTheBeehive(
                "1321",
                "Крыша ППУ Нижегородец на 6 рамок",
                new BigDecimal(600.99).setScale(2, BigDecimal.ROUND_FLOOR),
                new String[][]{
                        {"Описание",
                                "Крышка ППУ цельнолитая, окрашенная," +
                                        "в комплекте: вентиляционная сетка - 4 шт, заглушка для улья - 4 шт."},
                        {"ВАЖНО",
                                "Вся представленная на сайте информация, " +
                                        "касающаяся технических характеристик, наличия на складе, стоимости товаров, " +
                                        "внешнего вида (фотографии товара), цвета носит ознакомительный характер."}
                },
                300,
                520, 446, 100, Unit.MM,
                1400
        );

        ComponentsOfTheBeehive bottom = new BottomOfTheBeehive(
                "2000",
                "Дно с сеткой ППУ (пенополиуретан)",
                new BigDecimal(905),
                new String[][]{
                        {"Описание",
                                "Дно с сеткой ППУ цельнолитое, окрашенное, в комплекте: летковый \n" +
                                        "заградитель - 1 шт,заглушка для улья - 2 шт, задвижка из поликарбоната - 1 шт."},
                        {"ВАЖНО",
                                "Вся представленная на сайте информация, " +
                                        "касающаяся технических характеристик, наличия на складе, стоимости товаров, " +
                                        "внешнего вида (фотографии товара), цвета носит ознакомительный характер."}
                },
                300,
                540, 446, 110, Unit.MM,
                1700
        );

        ComponentsOfTheBeehive body = new BodyOfTheBeehive(
                "20012",
                "Корпус 300 мм ППУ (пенополиуретан)",
                new BigDecimal(1_066),
                new String[][]{
                        {"Описание",
                                "Корпус 300 мм ППУ цельнолитой, окрашенный, с двумя заглушками в комплекте."},
                        {"ВАЖНО",
                                "Вся представленная на сайте информация, " +
                                        "касающаяся технических характеристик, наличия на складе, стоимости товаров, " +
                                        "внешнего вида (фотографии товара), цвета носит ознакомительный характер."}
                },
                300,
                520, 446, 320, Unit.MM,
                2300
        );

        ComponentsOfTheBeehive feeder = new FeederOfTheBeehive(
                "20026",
                "Корпус 300 мм ППУ (пенополиуретан)",
                new BigDecimal(675),
                new String[][]{
                        {"Описание",
                                "Кормушка ППУ цельнолитая, окрашенная, с двумя сетками в комплекте."},
                        {"ВАЖНО",
                                "Вся представленная на сайте информация, " +
                                        "касающаяся технических характеристик, наличия на складе, стоимости товаров, " +
                                        "внешнего вида (фотографии товара), цвета носит ознакомительный характер."}
                },
                300,
                520, 446, 100, Unit.MM,
                1600
        );

        ComponentsOfTheBeehive storage = new StorageOfTheBeehive(
                "20024",
                "Магазин 145 мм ППУ (пенополиуретан)",
                new BigDecimal(699),
                new String[][]{
                        {"Описание",
                                "Магазин 145 мм для ППУ улья цельнолитой, окрашенный."},
                        {"ВАЖНО",
                                "Вся представленная на сайте информация, " +
                                        "касающаяся технических характеристик, наличия на складе, стоимости товаров, " +
                                        "внешнего вида (фотографии товара), цвета носит ознакомительный характер."}
                },
                300,
                520, 446, 165, Unit.MM,
                1300
        );

        products.add(new Beehive(
                        "1125",
                        "УЛЕЙ ППУ НИЖЕГОРОДЕЦ КОМПЛЕКТ 12 РАМОК 2 КОРПУСА ДАДАН+ 2 МАГАЗИНА",
                        new BigDecimal(6_010),
                        new String[][]

                                {
                                        {
                                                "Описание",
                                                "Улей ППУ Нижегородец Комплект 12 рамок 2 корпуса Дадан+ 2 Магазина\n" +
                                                        "Комплект дадан двухкорпусный с двумя магазинами (Нижегородец)\n"
                                        }
                                },
                        90,
                        Stream.of(
                                new AbstractMap.SimpleEntry<>(roof, 1),
                                new AbstractMap.SimpleEntry<>(bottom, 1),
                                new AbstractMap.SimpleEntry<>(feeder, 1),
                                new AbstractMap.SimpleEntry<>(storage, 2),
                                new AbstractMap.SimpleEntry<>(body, 2)).
                                collect(Collectors.toList())
                )
        );


        //--------------------------------------------------------------------------------------------------------------
        //      Улей2
        //--------------------------------------------------------------------------------------------------------------


        ComponentsOfTheBeehive roof2 = new RoofOfTheBeehive(
                "1320",
                "Крыша ППУ Нижегородец на 6 рамок",
                new BigDecimal(600.99).setScale(2, BigDecimal.ROUND_FLOOR),
                new String[][]{
                        {"Описание",
                                "Крышка ППУ цельнолитая, окрашенная," +
                                        "в комплекте: вентиляционная сетка - 4 шт, заглушка для улья - 4 шт."},
                        {"ВАЖНО",
                                "Вся представленная на сайте информация, " +
                                        "касающаяся технических характеристик, наличия на складе, стоимости товаров, " +
                                        "внешнего вида (фотографии товара), цвета носит ознакомительный характер."}
                },
                300,
                520, 446, 100, Unit.MM,
                1400
        );

        ComponentsOfTheBeehive bottom2 = new BottomOfTheBeehive(
                "1999",
                "Дно с сеткой ППУ (пенополиуретан)",
                new BigDecimal(905),
                new String[][]{
                        {"Описание",
                                "Дно с сеткой ППУ цельнолитое, окрашенное, в комплекте: летковый \n" +
                                        "заградитель - 1 шт,заглушка для улья - 2 шт, задвижка из поликарбоната - 1 шт."},
                        {"ВАЖНО",
                                "Вся представленная на сайте информация, " +
                                        "касающаяся технических характеристик, наличия на складе, стоимости товаров, " +
                                        "внешнего вида (фотографии товара), цвета носит ознакомительный характер."}
                },
                300,
                540, 446, 110, Unit.MM,
                1700
        );

        ComponentsOfTheBeehive body2 = new BodyOfTheBeehive(
                "20011",
                "Корпус 300 мм ППУ (пенополиуретан)",
                new BigDecimal(1_066),
                new String[][]{
                        {"Описание",
                                "Корпус 300 мм ППУ цельнолитой, окрашенный, с двумя заглушками в комплекте."},
                        {"ВАЖНО",
                                "Вся представленная на сайте информация, " +
                                        "касающаяся технических характеристик, наличия на складе, стоимости товаров, " +
                                        "внешнего вида (фотографии товара), цвета носит ознакомительный характер."}
                },
                300,
                520, 446, 320, Unit.MM,
                2300
        );

        ComponentsOfTheBeehive feeder2 = new FeederOfTheBeehive(
                "20023",
                "Корпус 300 мм ППУ (пенополиуретан)",
                new BigDecimal(675),
                new String[][]{
                        {"Описание",
                                "Кормушка ППУ цельнолитая, окрашенная, с двумя сетками в комплекте."},
                        {"ВАЖНО",
                                "Вся представленная на сайте информация, " +
                                        "касающаяся технических характеристик, наличия на складе, стоимости товаров, " +
                                        "внешнего вида (фотографии товара), цвета носит ознакомительный характер."}
                },
                300,
                520, 446, 100, Unit.MM,
                1600
        );
        ComponentsOfTheBeehive storage2 = new StorageOfTheBeehive(
                "20025",
                "Магазин 145 мм ППУ (пенополиуретан)",
                new BigDecimal(699),
                new String[][]{
                        {"Описание",
                                "Магазин 145 мм для ППУ улья цельнолитой, окрашенный."},
                        {"ВАЖНО",
                                "Вся представленная на сайте информация," +
                                        "касающаяся технических характеристик, наличия на складе, стоимости товаров, " +
                                        "внешнего вида (фотографии товара), цвета носит ознакомительный характер."}
                },
                300,
                520, 446, 165, Unit.MM,
                1300
        );

        products.add(new Beehive(
                        "1126",
                        "УЛЕЙ ППУ НИЖЕГОРОДЕЦ КОМПЛЕКТ 12 РАМОК 2 КОРПУСА ДАДАН+ 2 МАГАЗИНА",
                        new BigDecimal(6_010),
                        new String[][]{{"Описание",
                                "Улей ППУ Нижегородец Комплект 12 рамок 2 корпуса Дадан+ 2 Магазина\n" +
                                        "Комплект дадан двухкорпусный с двумя магазинами (Нижегородец)\n"}
                        },
                        100,
                        Stream.of(
                                new AbstractMap.SimpleEntry<>(roof2, 1),
                                new AbstractMap.SimpleEntry<>(bottom2, 1),
                                new AbstractMap.SimpleEntry<>(feeder2, 1),
                                new AbstractMap.SimpleEntry<>(storage2, 2),
                                new AbstractMap.SimpleEntry<>(body2, 2)).
                                collect(Collectors.toList())
                )
        );


        //--------------------------------------------------------------------------------------------------------------
        //      Комплектующие
        //--------------------------------------------------------------------------------------------------------------

        products.add(roof);
        products.add(bottom);
        products.add(feeder);
        products.add(storage);
        products.add(body);

        products.add(roof2);
        products.add(bottom2);
        products.add(feeder2);
        products.add(storage2);
        products.add(body2);


        //--------------------------------------------------------------------------------------------------------------
        //      Средства защиты
        //--------------------------------------------------------------------------------------------------------------

        products.add(new GlovesOfTheBeekeeper("0399",
                        "ПЕРЧАТКИ ПЧЕЛОВОДА ИСКУССТВ. КОЖА С НАРУКАВНИКАМИ",
                        new BigDecimal(600),
                        "",
//                new String[][]{{""}},
                        100, "S", "PMiKBee", "кожа")
        );

        products.add(new GlovesOfTheBeekeeper("0400",
                        "ПЕРЧАТКИ ПЧЕЛОВОДА ИСКУССТВ. КОЖА С НАРУКАВНИКАМИ",
                        new BigDecimal(600),
                        "",
//                new String[][]{{""}},
                        100, "M", "PMiKBee", "кожа")
        );

        products.add(new GlovesOfTheBeekeeper("245",
                "ПЕРЧАТКИ ПЧЕЛОВОДА КОЖА НАТУРАЛЬНАЯ КИТАЙ",
                new BigDecimal(880),
                new String[][]{{"Описание",
                        "Перчатки служат для защиты рук во время работы на пасеке от укусов пчел, " +
                                "а также от воздействия прополиса. Перчатки изготовлены из натуральной кожи и пришитых к ним " +
                                "двурядным швом нарукавников из бязи суровой. В свободные концы нарукавников вставлены " +
                                "обтягивающие резинки, которые не дают пчёлам забраться под ткань."}
                },
                70, "S", "PMiKBee", "кожа")
        );

        products.add(new MaskOfTheBeekeeper("233",
                "Сетка лицевая Европейского образца",
                new BigDecimal(400),
                new String[][]{
                        {"Описание",
                                "Сетка лицевая Европейского образца оранжевая " +
                                        "с широкими полями и круговой сеткой из плотной " +
                                        "красочной ткани."}
                },
                50, "XL", "bb", "ткань")
        );

        products.add(new OverallOfTheBeekeeper("0660",
                "КОСТЮМ ЛЮКС 'ПЧЕЛОТЕХНИКА'",
                new BigDecimal(2_600),
                new String[][]{{"Описание", "Костюм пчеловода защищает голову, туловище и конечности " +
                        "пчеловода во время работы на пасеке от укусов пчел. Для комплексной защиты " +
                        "рекомендуется дополнительно использовать перчатки защитные с нарукавниками."}
                }, 35, "48-50", "PMiKBee", "кожа")
        );

        products.add(new OverallOfTheBeekeeper("240",
                "КОСТЮМ ПЧЕЛОВОДА ДВУНИТКА БЕЗ СЕТКИ",
                new BigDecimal(800),
                new String[][]{{"Описание", "Костюм пчеловода из двунитки защищает голову, туловище и конечности " +
                        "пчеловода во время работы на пасеке от укусов пчел."}
                }, 50, "48-50", "PMiKBee", "кожа")
        );

    }

    public Goods findGoodsByArticle(String article) {
        Goods goods = null;
        try {
            goods = products.stream()
                    .filter(p -> p.getArticle().equals(article))
                    .findFirst()
                    .get();
        } catch (NoSuchElementException ignored) {
        }
        return goods;
    }

    public List<Goods> getGoodsByName(String name) {
        List<Goods> goods = null;
        try {
            goods = products.stream()
                    .filter(p -> p.getName().toUpperCase().startsWith(name))
                    .collect(Collectors.toList());
        } catch (NoSuchElementException ignored) {
        }
        return goods;
    }

    public Set<Goods> getAllProducts() {
        return products;
    }

}
